#Following describes how to configure hostapd
$ nano /etc/default/hostapd

$DAEMON_CONF="/etc/hostapt/hostapt.conf"

$nano /etc/hostapd/hostapd.conf

interface=wlan0
driver=nl80211
ssid=SPN-Test
channel=6
hw_mode=g
wpa_passphrase=11111111
auth_algs=3
rsn_pairwise=CCMP
wpa=2
wpa_key_mgmt=WPA-PSK
wpa_pairwise=TKIP CCMP
#  this enables the 802.11n speeds and capabilities ...  You will also need to enable WMM for full HT functionality.
ieee80211n=1
wmm_enabled=1


$ iw dev wlan0 del

$ iw phy phy0 interface add wlan0 type managed

$ hostapd -B -P /tmp/hostapd.foo /etc/hostapd/hostapd.conf

#temporary ip config
$ ifconfig wlan0 192.168.0.1 netmask 255.255.255.0 up
#alternative (rebootable):
# The primary network interface
allow-hotplug eth1
iface eth1 inet static
        address 10.0.0.26
        netmask 255.255.255.0
        gateway 10.0.0.200

allow-hotplug wlan0
iface wlan0 inet static
        address 192.168.0.1
        netmask 255.255.255.0



#NAT
# HOW TO setup bridging on an Ubuntu 12.04 Precise
# to provide Internet connection to a SHM Gumstix node
# Instruction below assumes that:
# - interface with Internet connection is wlan0
# - interface connected to Gumstix is eth0
# If not, then change accordingly
# Additional info here:

# https://help.ubuntu.com/community/Internet/ConnectionSharing#Ubuntu_Internet_Gateway_Method_.28iptables.29

# 1 - get rid of dnsmasq if installed
$ apt-get remove dnsmasq

# 2 - Either get rid of Network Manager or configure Network manager so
# that eth0 has the specific IP address 10.1.10.0 (net: 10.1.0.0/16)
# This is the IP address for the gateway that is hard-coded in the Gumstix
# (note: if Network Manager is installed and running it will periodically
# try to apply its config to the system, thus potentially wipe any ip config
# which were done manually)
$ ifconfig wlan0 192.168.0.1 netmask 255.255.0.0 up

# 3 Setup iptables
# - allows forwarded packets (initial ones)
# - allows forwarding of established connection packets
# - enable NAT
$ iptables -A FORWARD -o eth1 -i wlan0 -s 192.168.0.0/24 -m conntrack --ctstate NEW -j ACCEPT
$ iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
$ iptables -t nat -F POSTROUTING
$ iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE

# 4 - Enable and configure routing
$ sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
$ nano /etc/sysctl.conf
net.ipv4.conf.default.forwarding=1
net.ipv4.conf.all.forwarding=1
net.ipv4.ip_forward=1

# 5 - ON THE Client machine
# Set up default route
$ route add default gw 192.168.0.1


Maybe see: http://forum.doozan.com/read.php?2,6300